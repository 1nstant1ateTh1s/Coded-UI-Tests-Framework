// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FDACodedUITests_Framework.UIMaps.MyFDAGovMyContentPageUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class MyFDAGovMyContentPageUIMap
    {
        
        /// <summary>
        /// Add a new document to the Personal Documents library
        /// </summary>
        public void AddPersonalDocument()
        {
            #region Variable Declarations
            HtmlCell uIPersonalDocumentsCell = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UIPersonalDocumentsCell;
            HtmlHyperlink uINewDocumentHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UINewDocumentNewDocumePane.UINewDocumentHyperlink;
            HtmlHyperlink uINewDocumentCreateaneHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UINewDocumentCreateaneHyperlink;
            WinButton uIOKButton = this.UIOpenDocumentWindow.UIOKWindow.UIOKButton;
            WinClient uIMicrosoftWordDocumenClient = this.UIDocument1CompatibiliWindow.UIDocument1CompatibiliClient.UIMicrosoftWordDocumenClient;
            WinButton uISaveButton = this.UIDocument1CompatibiliWindow.UIItemWindow.UIQuickAccessToolbarToolBar.UISaveButton;
            WinButton uISaveButton1 = this.UISaveAsWindow.UISaveWindow.UISaveButton;
            BrowserWindow uIBrownAndrewWindowsInWindow = this.UIBrownAndrewWindowsInWindow;
            WinButton uITESTdocCompatibilityButton = this.UIRunningapplicationsWindow.UIRunningapplicationsToolBar.UITESTdocCompatibilityButton;
            WinMenuItem uIClosewindowMenuItem = this.UIJumpListWindow.UIItemWindow.UIJumpListClient.UIClosewindowMenuItem;
            #endregion

            // Click 'Personal Documents' cell
            Mouse.Click(uIPersonalDocumentsCell, new Point(225, 10));

            // Click 'New Document' link
            Mouse.Click(uINewDocumentHyperlink, new Point(36, 20));

            // Click 'New DocumentCreate a new document in this library....' link
            Mouse.Click(uINewDocumentCreateaneHyperlink, new Point(64, 28));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(34, 12));

            // Wait for 8 seconds for user delay between actions; Type 'TEST' in 'Microsoft Word Document' client
            Playback.Wait(8000);
            Keyboard.SendKeys(uIMicrosoftWordDocumenClient, this.AddPersonalDocumentParams.UIMicrosoftWordDocumenClientSendKeys, ModifierKeys.None);

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(9, 11));

            // Click '&Save' button
            Mouse.Click(uISaveButton1, new Point(33, 10));

            // Perform Refresh on Browser Window
            uIBrownAndrewWindowsInWindow.Refresh();

            // Right-Click 'TEST.doc [Compatibility Mode] - Microsoft Word' button
            Mouse.Click(uITESTdocCompatibilityButton, MouseButtons.Right, ModifierKeys.None, new Point(27, 6));

            // Click 'Close window' menu item
            Mouse.Click(uIClosewindowMenuItem, new Point(103, 8));

            // Click 'Retry' button in the browser dialog window
            uIBrownAndrewWindowsInWindow.PerformDialogAction(BrowserDialogAction.Retry);
        }
        
        /// <summary>
        /// Add a new document to the Shared Documents library
        /// </summary>
        public void AddSharedDocument()
        {
            #region Variable Declarations
            HtmlCell uISharedDocumentsCell = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UISharedDocumentsCell;
            HtmlHyperlink uINewDocumentHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UINewDocumentNewDocumePane.UINewDocumentHyperlink;
            HtmlHyperlink uINewDocumentCreateaneHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UINewDocumentCreateaneHyperlink;
            WinButton uIOKButton = this.UIOpenDocumentWindow.UIOKWindow.UIOKButton;
            WinClient uIMicrosoftWordDocumenClient = this.UIDocument1CompatibiliWindow.UIDocument1CompatibiliClient.UIMicrosoftWordDocumenClient;
            WinButton uISaveButton = this.UIDocument1CompatibiliWindow.UIItemWindow.UIQuickAccessToolbarToolBar.UISaveButton;
            WinButton uISaveButton1 = this.UISaveAsWindow.UISaveWindow.UISaveButton;
            BrowserWindow uIBrownAndrewWindowsInWindow = this.UIBrownAndrewWindowsInWindow;
            WinButton uITESTdocCompatibilityButton = this.UIRunningapplicationsWindow.UIRunningapplicationsToolBar.UITESTdocCompatibilityButton;
            WinMenuItem uIClosewindowMenuItem = this.UIJumpListWindow.UIItemWindow.UIJumpListClient.UIClosewindowMenuItem;
            WinButton uIRetryButton = this.UIWindowsInternetExploWindow.UIRetryWindow.UIRetryButton;
            #endregion

            // Click 'Shared Documents' cell
            Mouse.Click(uISharedDocumentsCell, new Point(251, 16));

            // Click 'New Document' link
            Mouse.Click(uINewDocumentHyperlink, new Point(48, 13));

            // Click 'New DocumentCreate a new document in this library....' link
            Mouse.Click(uINewDocumentCreateaneHyperlink, new Point(70, 23));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(46, 16));

            // Wait for 8 seconds for user delay between actions; Type 'TEST' in 'Microsoft Word Document' client
            Playback.Wait(8000);
            Keyboard.SendKeys(uIMicrosoftWordDocumenClient, this.AddSharedDocumentParams.UIMicrosoftWordDocumenClientSendKeys, ModifierKeys.None);

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(11, 10));

            // Click '&Save' button
            Mouse.Click(uISaveButton1, new Point(54, 11));

            // Go to web page 'http://my.preprod.fda.gov/personal/andrew_brown/default.aspx?InitialTabId=Ribbon.Document&VisibilityContext=WSSTabPersistence' using new browser instance
            this.UIBrownAndrewWindowsInWindow.LaunchUrl(new System.Uri(this.AddSharedDocumentParams.UIBrownAndrewWindowsInWindowUrl));

            // Perform Refresh on Browser Window
            uIBrownAndrewWindowsInWindow.Refresh();

            // Right-Click 'TEST.doc [Compatibility Mode] - Microsoft Word' button
            Mouse.Click(uITESTdocCompatibilityButton, MouseButtons.Right, ModifierKeys.None, new Point(28, 23));

            // Click 'Close window' menu item
            Mouse.Click(uIClosewindowMenuItem, new Point(98, 5));

            // Click '&Retry' button
            Mouse.Click(uIRetryButton, new Point(31, 9));
        }
        
        /// <summary>
        /// Validate a document was added to the Personal Documents library
        /// </summary>
        public void AssertDocAddedToPersonalDocuments()
        {
            #region Variable Declarations
            HtmlTable uIOnetidDoclibViewTbl0Table = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UIOnetidDoclibViewTbl0Table;
            #endregion

            // Verify that the 'RowCount' property of 'onetidDoclibViewTbl0' table is not equal to '1'
            Assert.AreNotEqual(this.AssertDocAddedToPersonalDocumentsExpectedValues.UIOnetidDoclibViewTbl0TableRowCount, uIOnetidDoclibViewTbl0Table.RowCount, "Document was not added to Personal Documents library");
        }
        
        /// <summary>
        /// Validate the document count in Shared Documents library
        /// </summary>
        public void AssertDocAddedToSharedDocuments()
        {
            #region Variable Declarations
            HtmlTable uIOnetidDoclibViewTbl0Table = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UIOnetidDoclibViewTbl0Table;
            #endregion

            // Verify that the 'RowCount' property of 'onetidDoclibViewTbl0' table is not equal to '1'
            Assert.AreNotEqual(this.AssertDocAddedToSharedDocumentsExpectedValues.UIOnetidDoclibViewTbl0TableRowCount, uIOnetidDoclibViewTbl0Table.RowCount, "No document was uploaded to the Shared Documents library");
        }
        
        /// <summary>
        /// Delete document from Personal Documents library
        /// </summary>
        public void DeletePersonalDocument()
        {
            #region Variable Declarations
            HtmlCell uIPersonalDocumentsCell = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UIPersonalDocumentsCell;
            HtmlDiv uITESTPane = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UITESTPane;
            HtmlHyperlink uIDeleteDocumentHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument1.UIDeleteDocumentHyperlink;
            BrowserWindow uIBrownAndrewWindowsInWindow = this.UIBrownAndrewWindowsInWindow;
            #endregion

            // Click 'Personal Documents' cell
            Mouse.Click(uIPersonalDocumentsCell, new Point(239, 23));

            // Click 'TEST' pane
            Mouse.Click(uITESTPane, new Point(77, 15));

            // Click 'Delete Document' link
            Mouse.Click(uIDeleteDocumentHyperlink, new Point(73, 9));

            // Click 'Ok' button in the browser dialog window
            uIBrownAndrewWindowsInWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// Delete document from Shared Documents library
        /// </summary>
        public void DeleteSharedDocument()
        {
            #region Variable Declarations
            HtmlCell uISharedDocumentsCell = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UISharedDocumentsCell;
            HtmlDiv uITESTPane = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UITESTPane;
            HtmlHyperlink uIDeleteDocumentHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UIDeleteDocumentHyperlink;
            BrowserWindow uIBrownAndrewWindowsInWindow = this.UIBrownAndrewWindowsInWindow;
            #endregion

            // Click 'Shared Documents' cell
            Mouse.Click(uISharedDocumentsCell, new Point(208, 13));

            // Click 'TEST' pane
            Mouse.Click(uITESTPane, new Point(86, 16));

            // Click 'Delete Document' link
            Mouse.Click(uIDeleteDocumentHyperlink, new Point(76, 7));

            // Click 'Ok' button in the browser dialog window
            uIBrownAndrewWindowsInWindow.PerformDialogAction(BrowserDialogAction.Ok);
        }
        
        /// <summary>
        /// Upload a document to the Personal Documents library
        /// </summary>
        public void UploadPersonalDocument()
        {
            #region Variable Declarations
            HtmlHyperlink uIAdddocumentHyperlink1 = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UIAdddocumentHyperlink1;
            HtmlFileInput uINameFileInput = this.UIBrownAndrewWindowsInWindow.UIDlgFramefc5b364e4debFrame.UIPersonalDocumentsUplDocument.UINameFileInput;
            HtmlInputButton uIOKButton = this.UIBrownAndrewWindowsInWindow.UIDlgFramefc5b364e4debFrame.UIPersonalDocumentsUplDocument.UIOKButton;
            #endregion

            // Click 'Add document' link
            Mouse.Click(uIAdddocumentHyperlink1, new Point(49, 9));

            // Type 'C:\Users\Andrew.Brown\Documents\TESTING\Test Files\TEST.docx' in 'Name:' file input
            uINameFileInput.FileName = this.UploadPersonalDocumentParams.UINameFileInputFileName;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(70, 12));
        }
        
        /// <summary>
        /// Upload a document to the Shared Documents library
        /// </summary>
        public void UploadSharedDocument()
        {
            #region Variable Declarations
            HtmlHyperlink uIAdddocumentHyperlink = this.UIBrownAndrewWindowsInWindow.UIBrownAndrewDocument.UIAdddocumentHyperlink;
            HtmlFileInput uINameFileInput = this.UIBrownAndrewWindowsInWindow.UIDlgFrame1591978ff6e2Frame.UISharedDocumentsUploaDocument.UINameFileInput;
            HtmlInputButton uIOKButton = this.UIBrownAndrewWindowsInWindow.UIDlgFrame1591978ff6e2Frame.UISharedDocumentsUploaDocument.UIOKButton;
            #endregion

            // Click 'Add document' link
            Mouse.Click(uIAdddocumentHyperlink, new Point(48, 6));

            // Type 'C:\Users\Andrew.Brown\Documents\TESTING\Test Files\TEST.docx' in 'Name:' file input
            uINameFileInput.FileName = this.UploadSharedDocumentParams.UINameFileInputFileName;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(62, 12));
        }
        
        #region Properties
        public virtual AddPersonalDocumentParams AddPersonalDocumentParams
        {
            get
            {
                if ((this.mAddPersonalDocumentParams == null))
                {
                    this.mAddPersonalDocumentParams = new AddPersonalDocumentParams();
                }
                return this.mAddPersonalDocumentParams;
            }
        }
        
        public virtual AddSharedDocumentParams AddSharedDocumentParams
        {
            get
            {
                if ((this.mAddSharedDocumentParams == null))
                {
                    this.mAddSharedDocumentParams = new AddSharedDocumentParams();
                }
                return this.mAddSharedDocumentParams;
            }
        }
        
        public virtual AssertDocAddedToPersonalDocumentsExpectedValues AssertDocAddedToPersonalDocumentsExpectedValues
        {
            get
            {
                if ((this.mAssertDocAddedToPersonalDocumentsExpectedValues == null))
                {
                    this.mAssertDocAddedToPersonalDocumentsExpectedValues = new AssertDocAddedToPersonalDocumentsExpectedValues();
                }
                return this.mAssertDocAddedToPersonalDocumentsExpectedValues;
            }
        }
        
        public virtual AssertDocAddedToSharedDocumentsExpectedValues AssertDocAddedToSharedDocumentsExpectedValues
        {
            get
            {
                if ((this.mAssertDocAddedToSharedDocumentsExpectedValues == null))
                {
                    this.mAssertDocAddedToSharedDocumentsExpectedValues = new AssertDocAddedToSharedDocumentsExpectedValues();
                }
                return this.mAssertDocAddedToSharedDocumentsExpectedValues;
            }
        }
        
        public virtual UploadPersonalDocumentParams UploadPersonalDocumentParams
        {
            get
            {
                if ((this.mUploadPersonalDocumentParams == null))
                {
                    this.mUploadPersonalDocumentParams = new UploadPersonalDocumentParams();
                }
                return this.mUploadPersonalDocumentParams;
            }
        }
        
        public virtual UploadSharedDocumentParams UploadSharedDocumentParams
        {
            get
            {
                if ((this.mUploadSharedDocumentParams == null))
                {
                    this.mUploadSharedDocumentParams = new UploadSharedDocumentParams();
                }
                return this.mUploadSharedDocumentParams;
            }
        }
        
        public UIBrownAndrewWindowsInWindow UIBrownAndrewWindowsInWindow
        {
            get
            {
                if ((this.mUIBrownAndrewWindowsInWindow == null))
                {
                    this.mUIBrownAndrewWindowsInWindow = new UIBrownAndrewWindowsInWindow();
                }
                return this.mUIBrownAndrewWindowsInWindow;
            }
        }
        
        public UIOpenDocumentWindow UIOpenDocumentWindow
        {
            get
            {
                if ((this.mUIOpenDocumentWindow == null))
                {
                    this.mUIOpenDocumentWindow = new UIOpenDocumentWindow();
                }
                return this.mUIOpenDocumentWindow;
            }
        }
        
        public UIDocument1CompatibiliWindow UIDocument1CompatibiliWindow
        {
            get
            {
                if ((this.mUIDocument1CompatibiliWindow == null))
                {
                    this.mUIDocument1CompatibiliWindow = new UIDocument1CompatibiliWindow();
                }
                return this.mUIDocument1CompatibiliWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIJumpListWindow UIJumpListWindow
        {
            get
            {
                if ((this.mUIJumpListWindow == null))
                {
                    this.mUIJumpListWindow = new UIJumpListWindow();
                }
                return this.mUIJumpListWindow;
            }
        }
        
        public UIWindowsInternetExploWindow UIWindowsInternetExploWindow
        {
            get
            {
                if ((this.mUIWindowsInternetExploWindow == null))
                {
                    this.mUIWindowsInternetExploWindow = new UIWindowsInternetExploWindow();
                }
                return this.mUIWindowsInternetExploWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddPersonalDocumentParams mAddPersonalDocumentParams;
        
        private AddSharedDocumentParams mAddSharedDocumentParams;
        
        private AssertDocAddedToPersonalDocumentsExpectedValues mAssertDocAddedToPersonalDocumentsExpectedValues;
        
        private AssertDocAddedToSharedDocumentsExpectedValues mAssertDocAddedToSharedDocumentsExpectedValues;
        
        private UploadPersonalDocumentParams mUploadPersonalDocumentParams;
        
        private UploadSharedDocumentParams mUploadSharedDocumentParams;
        
        private UIBrownAndrewWindowsInWindow mUIBrownAndrewWindowsInWindow;
        
        private UIOpenDocumentWindow mUIOpenDocumentWindow;
        
        private UIDocument1CompatibiliWindow mUIDocument1CompatibiliWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIJumpListWindow mUIJumpListWindow;
        
        private UIWindowsInternetExploWindow mUIWindowsInternetExploWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddPersonalDocument'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AddPersonalDocumentParams
    {
        
        #region Fields
        /// <summary>
        /// Wait for 8 seconds for user delay between actions; Type 'TEST' in 'Microsoft Word Document' client
        /// </summary>
        public string UIMicrosoftWordDocumenClientSendKeys = "TEST";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddSharedDocument'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AddSharedDocumentParams
    {
        
        #region Fields
        /// <summary>
        /// Wait for 8 seconds for user delay between actions; Type 'TEST' in 'Microsoft Word Document' client
        /// </summary>
        public string UIMicrosoftWordDocumenClientSendKeys = "TEST";
        
        /// <summary>
        /// Go to web page 'http://my.preprod.fda.gov/personal/andrew_brown/default.aspx?InitialTabId=Ribbon.Document&VisibilityContext=WSSTabPersistence' using new browser instance
        /// </summary>
        public string UIBrownAndrewWindowsInWindowUrl = "http://my.preprod.fda.gov/personal/andrew_brown/default.aspx?InitialTabId=Ribbon." +
            "Document&VisibilityContext=WSSTabPersistence";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDocAddedToPersonalDocuments'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertDocAddedToPersonalDocumentsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'RowCount' property of 'onetidDoclibViewTbl0' table is not equal to '1'
        /// </summary>
        public int UIOnetidDoclibViewTbl0TableRowCount = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDocAddedToSharedDocuments'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertDocAddedToSharedDocumentsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'RowCount' property of 'onetidDoclibViewTbl0' table is not equal to '1'
        /// </summary>
        public int UIOnetidDoclibViewTbl0TableRowCount = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UploadPersonalDocument'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UploadPersonalDocumentParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'C:\Users\Andrew.Brown\Documents\TESTING\Test Files\TEST.docx' in 'Name:' file input
        /// </summary>
        public string UINameFileInputFileName = "C:\\Users\\Andrew.Brown\\Documents\\TESTING\\Test Files\\TEST.docx";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UploadSharedDocument'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UploadSharedDocumentParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'C:\Users\Andrew.Brown\Documents\TESTING\Test Files\TEST.docx' in 'Name:' file input
        /// </summary>
        public string UINameFileInputFileName = "C:\\Users\\Andrew.Brown\\Documents\\TESTING\\Test Files\\TEST.docx";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBrownAndrewWindowsInWindow : BrowserWindow
    {
        
        public UIBrownAndrewWindowsInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Brown, Andrew *";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBrownAndrewDocument UIBrownAndrewDocument
        {
            get
            {
                if ((this.mUIBrownAndrewDocument == null))
                {
                    this.mUIBrownAndrewDocument = new UIBrownAndrewDocument(this);
                }
                return this.mUIBrownAndrewDocument;
            }
        }
        
        public UIDlgFrame1591978ff6e2Frame UIDlgFrame1591978ff6e2Frame
        {
            get
            {
                if ((this.mUIDlgFrame1591978ff6e2Frame == null))
                {
                    this.mUIDlgFrame1591978ff6e2Frame = new UIDlgFrame1591978ff6e2Frame(this);
                }
                return this.mUIDlgFrame1591978ff6e2Frame;
            }
        }
        
        public UIDlgFramefc5b364e4debFrame UIDlgFramefc5b364e4debFrame
        {
            get
            {
                if ((this.mUIDlgFramefc5b364e4debFrame == null))
                {
                    this.mUIDlgFramefc5b364e4debFrame = new UIDlgFramefc5b364e4debFrame(this);
                }
                return this.mUIDlgFramefc5b364e4debFrame;
            }
        }
        
        public UIBrownAndrewDocument1 UIBrownAndrewDocument1
        {
            get
            {
                if ((this.mUIBrownAndrewDocument1 == null))
                {
                    this.mUIBrownAndrewDocument1 = new UIBrownAndrewDocument1(this);
                }
                return this.mUIBrownAndrewDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIBrownAndrewDocument mUIBrownAndrewDocument;
        
        private UIDlgFrame1591978ff6e2Frame mUIDlgFrame1591978ff6e2Frame;
        
        private UIDlgFramefc5b364e4debFrame mUIDlgFramefc5b364e4debFrame;
        
        private UIBrownAndrewDocument1 mUIBrownAndrewDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBrownAndrewDocument : HtmlDocument
    {
        
        public UIBrownAndrewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Brown, Andrew *";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/personal/andrew_brown/default.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/default.aspx";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAdddocumentHyperlink
        {
            get
            {
                if ((this.mUIAdddocumentHyperlink == null))
                {
                    this.mUIAdddocumentHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAdddocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "idHomePageNewDocument";
                    this.mUIAdddocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAdddocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_self";
                    this.mUIAdddocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add document";
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4CE19A" +
                        "D5-209E-4CE4-AD00-58461537C967}&RootFolder=";
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-addnew";
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=idHomePageNewDocument class=ms-addnew";
                    this.mUIAdddocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "36";
                    this.mUIAdddocumentHyperlink.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIAdddocumentHyperlink;
            }
        }
        
        public UIOnetidDoclibViewTbl0Table UIOnetidDoclibViewTbl0Table
        {
            get
            {
                if ((this.mUIOnetidDoclibViewTbl0Table == null))
                {
                    this.mUIOnetidDoclibViewTbl0Table = new UIOnetidDoclibViewTbl0Table(this);
                }
                return this.mUIOnetidDoclibViewTbl0Table;
            }
        }
        
        public HtmlHyperlink UIDeleteDocumentHyperlink
        {
            get
            {
                if ((this.mUIDeleteDocumentHyperlink == null))
                {
                    this.mUIDeleteDocumentHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "Ribbon.Documents.Manage.Delete-Medium";
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete Document";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-cui-ctl-medium ";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=Ribbon.Documents.Manage.Delete-Medium";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "39";
                    this.mUIDeleteDocumentHyperlink.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIDeleteDocumentHyperlink;
            }
        }
        
        public HtmlHyperlink UIAdddocumentHyperlink1
        {
            get
            {
                if ((this.mUIAdddocumentHyperlink1 == null))
                {
                    this.mUIAdddocumentHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAdddocumentHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "idHomePageNewDocument";
                    this.mUIAdddocumentHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAdddocumentHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_self";
                    this.mUIAdddocumentHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add document";
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4C844F" +
                        "E6-FB84-4329-BD78-4610E8C4FDDD}&RootFolder=";
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-addnew";
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=idHomePageNewDocument class=ms-addnew";
                    this.mUIAdddocumentHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "76";
                    this.mUIAdddocumentHyperlink1.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIAdddocumentHyperlink1;
            }
        }
        
        public HtmlCell UISharedDocumentsCell
        {
            get
            {
                if ((this.mUISharedDocumentsCell == null))
                {
                    this.mUISharedDocumentsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUISharedDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Id] = "WebPartTitleWPQ2";
                    this.mUISharedDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Shared Documents";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=WebPartTitleWPQ2 class=ms-WPHeaderTd ";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.Class] = "ms-WPHeaderTd";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "13";
                    this.mUISharedDocumentsCell.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUISharedDocumentsCell;
            }
        }
        
        public HtmlDiv UITESTPane
        {
            get
            {
                if ((this.mUITESTPane == null))
                {
                    this.mUITESTPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITESTPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "15";
                    this.mUITESTPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TEST";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ms-vb itx";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=15 class=\"ms-vb itx\" onmouseover=OnIt";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "66";
                    this.mUITESTPane.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUITESTPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAdddocumentHyperlink;
        
        private UIOnetidDoclibViewTbl0Table mUIOnetidDoclibViewTbl0Table;
        
        private HtmlHyperlink mUIDeleteDocumentHyperlink;
        
        private HtmlHyperlink mUIAdddocumentHyperlink1;
        
        private HtmlCell mUISharedDocumentsCell;
        
        private HtmlDiv mUITESTPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOnetidDoclibViewTbl0Table : HtmlTable
    {
        
        public UIOnetidDoclibViewTbl0Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "onetidDoclibViewTbl0";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Type  Name  Modified  Modified By\r\n  \r\nT";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "dir=none id=onetidDoclibViewTbl0 class=m";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "ms-listviewtable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UITESTCheckBox
        {
            get
            {
                if ((this.mUITESTCheckBox == null))
                {
                    this.mUITESTCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = "TEST\r\n  ";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "s4-itm-cbx";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "class=s4-itm-cbx title=\"TEST&#13;&#10;  ";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "2";
                    this.mUITESTCheckBox.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUITESTCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUITESTCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDlgFrame1591978ff6e2Frame : HtmlIFrame
    {
        
        public UIDlgFrame1591978ff6e2Frame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "DlgFrame1591978f-f6e2-4a99-b357-e7c0facb9b20";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4CE19A" +
                "D5-209E-4CE4-AD00-58461537C967}&RootFolder=&IsDlg=1";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = "ms-dlgFrame";
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "style=\"WIDTH: 601px; HEIGHT: 303px\" id=D";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public UISharedDocumentsUploaDocument UISharedDocumentsUploaDocument
        {
            get
            {
                if ((this.mUISharedDocumentsUploaDocument == null))
                {
                    this.mUISharedDocumentsUploaDocument = new UISharedDocumentsUploaDocument(this);
                }
                return this.mUISharedDocumentsUploaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISharedDocumentsUploaDocument mUISharedDocumentsUploaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISharedDocumentsUploaDocument : HtmlDocument
    {
        
        public UISharedDocumentsUploaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Shared Documents - Upload Document";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4CE19A" +
                "D5-209E-4CE4-AD00-58461537C967}&RootFolder=&IsDlg=1";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlFileInput UINameFileInput
        {
            get
            {
                if ((this.mUINameFileInput == null))
                {
                    this.mUINameFileInput = new HtmlFileInput(this);
                    #region Search Criteria
                    this.mUINameFileInput.SearchProperties[HtmlFileInput.PropertyNames.Id] = "ctl00_PlaceHolderMain_ctl01_ctl05_InputFile";
                    this.mUINameFileInput.SearchProperties[HtmlFileInput.PropertyNames.Name] = "ctl00$PlaceHolderMain$ctl01$ctl05$InputFile";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.LabeledBy] = "Name:";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.Title] = null;
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.Class] = "ms-fileinput";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.ControlDefinition] = "id=ctl00_PlaceHolderMain_ctl01_ctl05_Inp";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.TagInstance] = "27";
                    this.mUINameFileInput.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUINameFileInput;
            }
        }
        
        public HtmlInputButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_PlaceHolderMain_ctl00_RptControls_btnOK";
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$PlaceHolderMain$ctl00$RptControls$btnOK";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "OK";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Class] = "ms-ButtonHeightWidth";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "accessKey=O id=ctl00_PlaceHolderMain_ctl";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "29";
                    this.mUIOKButton.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlFileInput mUINameFileInput;
        
        private HtmlInputButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDlgFramefc5b364e4debFrame : HtmlIFrame
    {
        
        public UIDlgFramefc5b364e4debFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "DlgFramefc5b364e-4deb-4e96-8abc-1654beeb4c65";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4C844F" +
                "E6-FB84-4329-BD78-4610E8C4FDDD}&RootFolder=&IsDlg=1";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = "ms-dlgFrame";
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "style=\"WIDTH: 601px; HEIGHT: 303px\" id=D";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public UIPersonalDocumentsUplDocument UIPersonalDocumentsUplDocument
        {
            get
            {
                if ((this.mUIPersonalDocumentsUplDocument == null))
                {
                    this.mUIPersonalDocumentsUplDocument = new UIPersonalDocumentsUplDocument(this);
                }
                return this.mUIPersonalDocumentsUplDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPersonalDocumentsUplDocument mUIPersonalDocumentsUplDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPersonalDocumentsUplDocument : HtmlDocument
    {
        
        public UIPersonalDocumentsUplDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Personal Documents - Upload Document";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/personal/andrew_brown/_layouts/Upload.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/_layouts/Upload.aspx?List={4C844F" +
                "E6-FB84-4329-BD78-4610E8C4FDDD}&RootFolder=&IsDlg=1";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlFileInput UINameFileInput
        {
            get
            {
                if ((this.mUINameFileInput == null))
                {
                    this.mUINameFileInput = new HtmlFileInput(this);
                    #region Search Criteria
                    this.mUINameFileInput.SearchProperties[HtmlFileInput.PropertyNames.Id] = "ctl00_PlaceHolderMain_ctl01_ctl05_InputFile";
                    this.mUINameFileInput.SearchProperties[HtmlFileInput.PropertyNames.Name] = "ctl00$PlaceHolderMain$ctl01$ctl05$InputFile";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.LabeledBy] = "Name:";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.Title] = null;
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.Class] = "ms-fileinput";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.ControlDefinition] = "id=ctl00_PlaceHolderMain_ctl01_ctl05_Inp";
                    this.mUINameFileInput.FilterProperties[HtmlFileInput.PropertyNames.TagInstance] = "27";
                    this.mUINameFileInput.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUINameFileInput;
            }
        }
        
        public HtmlInputButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Id] = "ctl00_PlaceHolderMain_ctl00_RptControls_btnOK";
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Name] = "ctl00$PlaceHolderMain$ctl00$RptControls$btnOK";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "OK";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Class] = "ms-ButtonHeightWidth";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "accessKey=O id=ctl00_PlaceHolderMain_ctl";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "29";
                    this.mUIOKButton.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlFileInput mUINameFileInput;
        
        private HtmlInputButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBrownAndrewDocument1 : HtmlDocument
    {
        
        public UIBrownAndrewDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Brown, Andrew *";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/personal/andrew_brown/default.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://my.preprod.fda.gov/personal/andrew_brown/default.aspx?InitialTabId=Ribbon%" +
                "2EDocument&VisibilityContext=WSSTabPersistence";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public UIOnetidDoclibViewTbl0Table1 UIOnetidDoclibViewTbl0Table
        {
            get
            {
                if ((this.mUIOnetidDoclibViewTbl0Table == null))
                {
                    this.mUIOnetidDoclibViewTbl0Table = new UIOnetidDoclibViewTbl0Table1(this);
                }
                return this.mUIOnetidDoclibViewTbl0Table;
            }
        }
        
        public HtmlHyperlink UIDeleteDocumentHyperlink
        {
            get
            {
                if ((this.mUIDeleteDocumentHyperlink == null))
                {
                    this.mUIDeleteDocumentHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "Ribbon.Documents.Manage.Delete-Medium";
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete Document";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-cui-ctl-medium ";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=Ribbon.Documents.Manage.Delete-Medium";
                    this.mUIDeleteDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "39";
                    this.mUIDeleteDocumentHyperlink.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIDeleteDocumentHyperlink;
            }
        }
        
        public HtmlCell UISharedDocumentsCell
        {
            get
            {
                if ((this.mUISharedDocumentsCell == null))
                {
                    this.mUISharedDocumentsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUISharedDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Id] = "WebPartTitleWPQ2";
                    this.mUISharedDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Shared Documents";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=WebPartTitleWPQ2 class=ms-WPHeaderTd ";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.Class] = "ms-WPHeaderTd";
                    this.mUISharedDocumentsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "13";
                    this.mUISharedDocumentsCell.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUISharedDocumentsCell;
            }
        }
        
        public UINewDocumentNewDocumePane UINewDocumentNewDocumePane
        {
            get
            {
                if ((this.mUINewDocumentNewDocumePane == null))
                {
                    this.mUINewDocumentNewDocumePane = new UINewDocumentNewDocumePane(this);
                }
                return this.mUINewDocumentNewDocumePane;
            }
        }
        
        public HtmlHyperlink UINewDocumentCreateaneHyperlink
        {
            get
            {
                if ((this.mUINewDocumentCreateaneHyperlink == null))
                {
                    this.mUINewDocumentCreateaneHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewDocumentCreateaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "Ribbon.Document.All.NewDocument.Menu.ContentTypes.0-Menu32";
                    this.mUINewDocumentCreateaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewDocumentCreateaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewDocumentCreateaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New DocumentCreate a new document in this library.\r\n ";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "New Document";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-cui-ctl-menu ms-cui-ctl-menu32 ";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=Ribbon.Document.All.NewDocument.Menu.";
                    this.mUINewDocumentCreateaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "87";
                    this.mUINewDocumentCreateaneHyperlink.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUINewDocumentCreateaneHyperlink;
            }
        }
        
        public HtmlCell UIPersonalDocumentsCell
        {
            get
            {
                if ((this.mUIPersonalDocumentsCell == null))
                {
                    this.mUIPersonalDocumentsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIPersonalDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Id] = "WebPartTitleWPQ3";
                    this.mUIPersonalDocumentsCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Personal Documents";
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=WebPartTitleWPQ3 class=ms-WPHeaderTd ";
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "0";
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "1";
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.Class] = "ms-WPHeaderTd";
                    this.mUIPersonalDocumentsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "29";
                    this.mUIPersonalDocumentsCell.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUIPersonalDocumentsCell;
            }
        }
        
        public HtmlDiv UITESTPane
        {
            get
            {
                if ((this.mUITESTPane == null))
                {
                    this.mUITESTPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUITESTPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "8";
                    this.mUITESTPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TEST";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ms-vb itx";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=8 class=\"ms-vb itx\" onmouseover=OnIte";
                    this.mUITESTPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "628";
                    this.mUITESTPane.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUITESTPane;
            }
        }
        #endregion
        
        #region Fields
        private UIOnetidDoclibViewTbl0Table1 mUIOnetidDoclibViewTbl0Table;
        
        private HtmlHyperlink mUIDeleteDocumentHyperlink;
        
        private HtmlCell mUISharedDocumentsCell;
        
        private UINewDocumentNewDocumePane mUINewDocumentNewDocumePane;
        
        private HtmlHyperlink mUINewDocumentCreateaneHyperlink;
        
        private HtmlCell mUIPersonalDocumentsCell;
        
        private HtmlDiv mUITESTPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOnetidDoclibViewTbl0Table1 : HtmlTable
    {
        
        public UIOnetidDoclibViewTbl0Table1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "onetidDoclibViewTbl0";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Type  Name  Modified  Modified By\r\n  \r\nT";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "dir=none id=onetidDoclibViewTbl0 class=m";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "ms-listviewtable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "15";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UITESTCheckBox
        {
            get
            {
                if ((this.mUITESTCheckBox == null))
                {
                    this.mUITESTCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUITESTCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = "TEST\r\n  ";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "s4-itm-cbx";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "class=s4-itm-cbx title=\"TEST&#13;&#10;  ";
                    this.mUITESTCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "2";
                    this.mUITESTCheckBox.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUITESTCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUITESTCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINewDocumentNewDocumePane : HtmlSpan
    {
        
        public UINewDocumentNewDocumePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "Ribbon.Documents.New.NewDocument-Large";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New DocumentNew\r\nDocument ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "ms-cui-ctl-large";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=Ribbon.Documents.New.NewDocument-Larg";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "39";
            this.WindowTitles.Add("Brown, Andrew *");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINewDocumentHyperlink
        {
            get
            {
                if ((this.mUINewDocumentHyperlink == null))
                {
                    this.mUINewDocumentHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewDocumentHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New\r\nDocument ";
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-cui-ctl-a2";
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "aria-haspopup=true class=ms-cui-ctl-a2 r";
                    this.mUINewDocumentHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUINewDocumentHyperlink.WindowTitles.Add("Brown, Andrew *");
                    #endregion
                }
                return this.mUINewDocumentHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINewDocumentHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOpenDocumentWindow : WinWindow
    {
        
        public UIOpenDocumentWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open Document";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Open Document");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Open Document");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Open Document");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDocument1CompatibiliWindow : WinWindow
    {
        
        public UIDocument1CompatibiliWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document1 [Compatibility Mode] - Microsoft Word";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "OpusApp";
            this.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIDocument1CompatibiliClient UIDocument1CompatibiliClient
        {
            get
            {
                if ((this.mUIDocument1CompatibiliClient == null))
                {
                    this.mUIDocument1CompatibiliClient = new UIDocument1CompatibiliClient(this);
                }
                return this.mUIDocument1CompatibiliClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDocument1CompatibiliClient mUIDocument1CompatibiliClient;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDocument1CompatibiliClient : WinClient
    {
        
        public UIDocument1CompatibiliClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Document1 [Compatibility Mode]";
            this.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinClient UIMicrosoftWordDocumenClient
        {
            get
            {
                if ((this.mUIMicrosoftWordDocumenClient == null))
                {
                    this.mUIMicrosoftWordDocumenClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIMicrosoftWordDocumenClient.SearchProperties[WinControl.PropertyNames.Name] = "Microsoft Word Document";
                    this.mUIMicrosoftWordDocumenClient.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
                    #endregion
                }
                return this.mUIMicrosoftWordDocumenClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIMicrosoftWordDocumenClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIQuickAccessToolbarToolBar UIQuickAccessToolbarToolBar
        {
            get
            {
                if ((this.mUIQuickAccessToolbarToolBar == null))
                {
                    this.mUIQuickAccessToolbarToolBar = new UIQuickAccessToolbarToolBar(this);
                }
                return this.mUIQuickAccessToolbarToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIQuickAccessToolbarToolBar mUIQuickAccessToolbarToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIQuickAccessToolbarToolBar : WinToolBar
    {
        
        public UIQuickAccessToolbarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Quick Access Toolbar";
            this.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Document1 [Compatibility Mode] - Microsoft Word");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsToolBar UIRunningapplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningapplicationsToolBar == null))
                {
                    this.mUIRunningapplicationsToolBar = new UIRunningapplicationsToolBar(this);
                }
                return this.mUIRunningapplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsToolBar mUIRunningapplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRunningapplicationsToolBar : WinToolBar
    {
        
        public UIRunningapplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinButton UITESTdocCompatibilityButton
        {
            get
            {
                if ((this.mUITESTdocCompatibilityButton == null))
                {
                    this.mUITESTdocCompatibilityButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITESTdocCompatibilityButton.SearchProperties[WinButton.PropertyNames.Name] = "TEST.doc [Compatibility Mode] - Microsoft Word";
                    this.mUITESTdocCompatibilityButton.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUITESTdocCompatibilityButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITESTdocCompatibilityButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJumpListWindow : WinWindow
    {
        
        public UIJumpListWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Jump List";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DV2ControlHost";
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9";
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public UIJumpListClient UIJumpListClient
        {
            get
            {
                if ((this.mUIJumpListClient == null))
                {
                    this.mUIJumpListClient = new UIJumpListClient(this);
                }
                return this.mUIJumpListClient;
            }
        }
        #endregion
        
        #region Fields
        private UIJumpListClient mUIJumpListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJumpListClient : WinClient
    {
        
        public UIJumpListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Jump List");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIClosewindowMenuItem
        {
            get
            {
                if ((this.mUIClosewindowMenuItem == null))
                {
                    this.mUIClosewindowMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIClosewindowMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Close window";
                    this.mUIClosewindowMenuItem.WindowTitles.Add("Jump List");
                    #endregion
                }
                return this.mUIClosewindowMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIClosewindowMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWindowsInternetExploWindow : WinWindow
    {
        
        public UIWindowsInternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Windows Internet Explorer";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Windows Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIRetryWindow UIRetryWindow
        {
            get
            {
                if ((this.mUIRetryWindow == null))
                {
                    this.mUIRetryWindow = new UIRetryWindow(this);
                }
                return this.mUIRetryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRetryWindow mUIRetryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRetryWindow : WinWindow
    {
        
        public UIRetryWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4";
            this.WindowTitles.Add("Windows Internet Explorer");
            #endregion
        }
        
        #region Properties
        public WinButton UIRetryButton
        {
            get
            {
                if ((this.mUIRetryButton == null))
                {
                    this.mUIRetryButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIRetryButton.SearchProperties[WinButton.PropertyNames.Name] = "Retry";
                    this.mUIRetryButton.WindowTitles.Add("Windows Internet Explorer");
                    #endregion
                }
                return this.mUIRetryButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIRetryButton;
        #endregion
    }
}
