// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FDACodedUITests_Framework.UIMaps.HomePageUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.SilverlightControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class HomePageUIMap
    {
        
        /// <summary>
        /// Login to FDA SharePoint site.
        /// </summary>
        public void Login()
        {
            #region Variable Declarations
            HtmlHyperlink uIBrownAndrewHyperlink = this.FDASharePointBrowser.UICollaborationHomeDocument.UIBrownAndrewHyperlink;
            HtmlHyperlink uISigninasDifferentUseHyperlink = this.FDASharePointBrowser.UICollaborationHomeDocument.UISigninasDifferentUseHyperlink;
            WinEdit uIUsernameEdit = this.UIWindowsSecurityWindow.UIUseanotheraccountListItem.UIUsernameEdit;
            WinEdit uIPasswordEdit = this.UIWindowsSecurityWindow.UIUseanotheraccountListItem.UIPasswordEdit;
            WinButton uIOKButton = this.UIWindowsSecurityWindow.UIWindowsSecurityPane.UIOKButton;
            #endregion

            // Click 'Brown, Andrew *' link
            Mouse.Click(uIBrownAndrewHyperlink, new Point(78, 10));

            // Click 'Sign in as Different User Login with a different a...' link
            Mouse.Click(uISigninasDifferentUseHyperlink, new Point(92, 18));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Type 'AD_APP_ABROWN' in 'User name' text box
            uIUsernameEdit.Text = this.LoginParams.UIUsernameEditText;

            // Click 'Password' text box
            Mouse.Click(uIPasswordEdit, new Point(98, 6));

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LoginParams.UIPasswordEditSendKeys, true);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(21, 14));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        /// <summary>
        /// Navigate to the my.FDA.gov page.
        /// </summary>
        public void NavToMyFDAGovPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIMyfdagovHyperlink = this.FDASharePointBrowser.UICollaborationHomeDocument.UIMyfdagovHyperlink;
            #endregion

            // Click 'my.fda.gov' link
            Mouse.Click(uIMyfdagovHyperlink, new Point(24, 10));
        }
        
        /// <summary>
        /// Go to FDA SharePoint Collaboration site's "All Site Content" view
        /// </summary>
        public void ViewAllSiteContent()
        {
            #region Variable Declarations
            HtmlHyperlink uISiteActionsHyperlink = this.FDASharePointBrowser.UICollaborationHomeDocument.UISiteActionsHyperlink;
            HtmlHyperlink uIViewAllSiteContentViHyperlink = this.FDASharePointBrowser.UICollaborationHomeDocument.UIViewAllSiteContentViHyperlink;
            #endregion

            // Click 'Site Actions' link
            Mouse.Click(uISiteActionsHyperlink, new Point(55, 10));

            // Click 'View All Site Content View all libraries and lists...' link
            Mouse.Click(uIViewAllSiteContentViHyperlink, new Point(108, 23));
        }
        
        #region Properties
        public virtual LoginParams LoginParams
        {
            get
            {
                if ((this.mLoginParams == null))
                {
                    this.mLoginParams = new LoginParams();
                }
                return this.mLoginParams;
            }
        }
        
        public FDASharePointBrowser FDASharePointBrowser
        {
            get
            {
                if ((this.mFDASharePointBrowser == null))
                {
                    this.mFDASharePointBrowser = new FDASharePointBrowser();
                }
                return this.mFDASharePointBrowser;
            }
        }
        
        public UIWindowsSecurityWindow UIWindowsSecurityWindow
        {
            get
            {
                if ((this.mUIWindowsSecurityWindow == null))
                {
                    this.mUIWindowsSecurityWindow = new UIWindowsSecurityWindow();
                }
                return this.mUIWindowsSecurityWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginParams mLoginParams;
        
        private FDASharePointBrowser mFDASharePointBrowser;
        
        private UIWindowsSecurityWindow mUIWindowsSecurityWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class LoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'AD_APP_ABROWN' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "AD_APP_ABROWN";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "y8jWFzghkJfaor3k/ZUz2nXU0M9gRRG3";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class FDASharePointBrowser : BrowserWindow
    {
        
        public FDASharePointBrowser()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Collaboration - Home", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Collaboration - Home");
            this.WindowTitles.Add("New Test Library - All Documents");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICollaborationHomeDocument UICollaborationHomeDocument
        {
            get
            {
                if ((this.mUICollaborationHomeDocument == null))
                {
                    this.mUICollaborationHomeDocument = new UICollaborationHomeDocument(this);
                }
                return this.mUICollaborationHomeDocument;
            }
        }
        
        public AddGalleryFrame AddGalleryFrame
        {
            get
            {
                if ((this.mAddGalleryFrame == null))
                {
                    this.mAddGalleryFrame = new AddGalleryFrame(this);
                }
                return this.mAddGalleryFrame;
            }
        }
        #endregion
        
        #region Fields
        private UICollaborationHomeDocument mUICollaborationHomeDocument;
        
        private AddGalleryFrame mAddGalleryFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICollaborationHomeDocument : HtmlDocument
    {
        
        public UICollaborationHomeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Collaboration - Home";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/SitePages/Home.aspx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "sharepoint.preprod.fda.gov", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBrownAndrewHyperlink
        {
            get
            {
                if ((this.mUIBrownAndrewHyperlink == null))
                {
                    this.mUIBrownAndrewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBrownAndrewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "zz8_Menu";
                    this.mUIBrownAndrewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBrownAndrewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBrownAndrewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Brown, Andrew *";
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-menu-a";
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "accessKey=W style=\"WHITE-SPACE: nowrap; ";
                    this.mUIBrownAndrewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIBrownAndrewHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUIBrownAndrewHyperlink;
            }
        }
        
        public HtmlHyperlink UISigninasDifferentUseHyperlink
        {
            get
            {
                if ((this.mUISigninasDifferentUseHyperlink == null))
                {
                    this.mUISigninasDifferentUseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISigninasDifferentUseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "mp1_0_5_Anchor";
                    this.mUISigninasDifferentUseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISigninasDifferentUseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISigninasDifferentUseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sign in as Different User\r\nLogin with a different account.";
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-MenuUIULLink";
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=mp1_0_5_Anchor class=ms-MenuUIULLink ";
                    this.mUISigninasDifferentUseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "17";
                    this.mUISigninasDifferentUseHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUISigninasDifferentUseHyperlink;
            }
        }
        
        public HtmlHyperlink UIMyfdagovHyperlink
        {
            get
            {
                if ((this.mUIMyfdagovHyperlink == null))
                {
                    this.mUIMyfdagovHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMyfdagovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_top_mySitesLink";
                    this.mUIMyfdagovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMyfdagovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMyfdagovHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "my.fda.gov";
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://my.preprod.fda.gov/";
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=ctl00_top_mySitesLink href=\"http://my";
                    this.mUIMyfdagovHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIMyfdagovHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUIMyfdagovHyperlink;
            }
        }
        
        public HtmlHyperlink UISiteActionsHyperlink
        {
            get
            {
                if ((this.mUISiteActionsHyperlink == null))
                {
                    this.mUISiteActionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISiteActionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "zz10_SiteActionsMenu";
                    this.mUISiteActionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISiteActionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISiteActionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Site Actions";
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-menu-a";
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "accessKey=/ style=\"WHITE-SPACE: nowrap; ";
                    this.mUISiteActionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUISiteActionsHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUISiteActionsHyperlink;
            }
        }
        
        public HtmlHyperlink UINewDocumentLibraryCrHyperlink
        {
            get
            {
                if ((this.mUINewDocumentLibraryCrHyperlink == null))
                {
                    this.mUINewDocumentLibraryCrHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewDocumentLibraryCrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "mp1_0_4_Anchor";
                    this.mUINewDocumentLibraryCrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewDocumentLibraryCrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewDocumentLibraryCrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "New Document Library\r\nCreate a place to store and share documents.";
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-MenuUIULLink";
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=mp1_0_4_Anchor class=ms-MenuUIULLink ";
                    this.mUINewDocumentLibraryCrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUINewDocumentLibraryCrHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUINewDocumentLibraryCrHyperlink;
            }
        }
        
        public HtmlHyperlink UIViewAllSiteContentViHyperlink
        {
            get
            {
                if ((this.mUIViewAllSiteContentViHyperlink == null))
                {
                    this.mUIViewAllSiteContentViHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIViewAllSiteContentViHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIViewAllSiteContentViHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIViewAllSiteContentViHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "View All Site Content\r\nView all libraries and lists in this site.";
                    this.mUIViewAllSiteContentViHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = ";";
                    this.mUIViewAllSiteContentViHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIViewAllSiteContentViHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:;";
                    this.mUIViewAllSiteContentViHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "ms-MenuUIULLink";
                    this.mUIViewAllSiteContentViHyperlink.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUIViewAllSiteContentViHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBrownAndrewHyperlink;
        
        private HtmlHyperlink mUISigninasDifferentUseHyperlink;
        
        private HtmlHyperlink mUIMyfdagovHyperlink;
        
        private HtmlHyperlink mUISiteActionsHyperlink;
        
        private HtmlHyperlink mUINewDocumentLibraryCrHyperlink;
        
        private HtmlHyperlink mUIViewAllSiteContentViHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AddGalleryFrame : HtmlIFrame
    {
        
        public AddGalleryFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(HtmlFrame.PropertyNames.Id, "DlgFrame", PropertyExpressionOperator.Contains));
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/_layouts/AddGallery.aspx";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "/_layouts/AddGallery.aspx?IsDlg=1";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = "ms-dlgFrame";
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "style=\"WIDTH: 1012px; HEIGHT: 511px\" id=";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public AddGalleryDocument AddGalleryDocument
        {
            get
            {
                if ((this.mAddGalleryDocument == null))
                {
                    this.mAddGalleryDocument = new AddGalleryDocument(this);
                }
                return this.mAddGalleryDocument;
            }
        }
        #endregion
        
        #region Fields
        private AddGalleryDocument mAddGalleryDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AddGalleryDocument : HtmlDocument
    {
        
        public AddGalleryDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/_layouts/AddGallery.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://sharepoint.preprod.fda.gov/_layouts/AddGallery.aspx?IsDlg=1";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public AddGallerySilverlightCustom AddGallerySilverlightCustom
        {
            get
            {
                if ((this.mAddGallerySilverlightCustom == null))
                {
                    this.mAddGallerySilverlightCustom = new AddGallerySilverlightCustom(this);
                }
                return this.mAddGallerySilverlightCustom;
            }
        }
        #endregion
        
        #region Fields
        private AddGallerySilverlightCustom mAddGallerySilverlightCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AddGallerySilverlightCustom : HtmlCustom
    {
        
        public AddGallerySilverlightCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "AddGallerySilverlight";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "OBJECT";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=AddGallerySilverlight data=\"data:appl";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public SilverlightPage1 SilverlightPage
        {
            get
            {
                if ((this.mSilverlightPage == null))
                {
                    this.mSilverlightPage = new SilverlightPage1(this);
                }
                return this.mSilverlightPage;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightPage1 mSilverlightPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SilverlightPage1 : SilverlightPage
    {
        
        public SilverlightPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Collaboration - Home");
            this.WindowTitles.Add("Collaboration - Home - Windows Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIOptionsScollPane UIOptionsScollPane
        {
            get
            {
                if ((this.mUIOptionsScollPane == null))
                {
                    this.mUIOptionsScollPane = new UIOptionsScollPane(this);
                }
                return this.mUIOptionsScollPane;
            }
        }
        
        public UITopScrollViewerPane UITopScrollViewerPane
        {
            get
            {
                if ((this.mUITopScrollViewerPane == null))
                {
                    this.mUITopScrollViewerPane = new UITopScrollViewerPane(this);
                }
                return this.mUITopScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private UIOptionsScollPane mUIOptionsScollPane;
        
        private UITopScrollViewerPane mUITopScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOptionsScollPane : SilverlightControl
    {
        
        public UIOptionsScollPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "OptionsScoll";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new SilverlightEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[SilverlightEdit.PropertyNames.AutomationId] = "LName_Box";
                    this.mUINameEdit.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public SilverlightRadioButton DocVersionHistEnabledYesRadioButton
        {
            get
            {
                if ((this.mDocVersionHistEnabledYesRadioButton == null))
                {
                    this.mDocVersionHistEnabledYesRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mDocVersionHistEnabledYesRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "LDocHist_EnabledYes";
                    this.mDocVersionHistEnabledYesRadioButton.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDocVersionHistEnabledYesRadioButton;
            }
        }
        
        public SilverlightRadioButton DocVersionHistEnabledNoRadioButton
        {
            get
            {
                if ((this.mDocVersionHistEnabledNoRadioButton == null))
                {
                    this.mDocVersionHistEnabledNoRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mDocVersionHistEnabledNoRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "LDocHist_EnabledNo";
                    this.mDocVersionHistEnabledNoRadioButton.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDocVersionHistEnabledNoRadioButton;
            }
        }
        
        public SilverlightEdit DescriptionEdit
        {
            get
            {
                if ((this.mDescriptionEdit == null))
                {
                    this.mDescriptionEdit = new SilverlightEdit(this);
                    #region Search Criteria
                    this.mDescriptionEdit.SearchProperties[SilverlightEdit.PropertyNames.AutomationId] = "LName_DescriptionBox";
                    this.mDescriptionEdit.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDescriptionEdit;
            }
        }
        
        public SilverlightRadioButton DisplayOnQuickLaunchYesRadioButton
        {
            get
            {
                if ((this.mDisplayOnQuickLaunchYesRadioButton == null))
                {
                    this.mDisplayOnQuickLaunchYesRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mDisplayOnQuickLaunchYesRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "LNav_QuickLauchYes";
                    this.mDisplayOnQuickLaunchYesRadioButton.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDisplayOnQuickLaunchYesRadioButton;
            }
        }
        
        public SilverlightRadioButton DisplayOnQuickLaunchNoRadioButton
        {
            get
            {
                if ((this.mDisplayOnQuickLaunchNoRadioButton == null))
                {
                    this.mDisplayOnQuickLaunchNoRadioButton = new SilverlightRadioButton(this);
                    #region Search Criteria
                    this.mDisplayOnQuickLaunchNoRadioButton.SearchProperties[SilverlightRadioButton.PropertyNames.AutomationId] = "LNav_QuickLauchNo";
                    this.mDisplayOnQuickLaunchNoRadioButton.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDisplayOnQuickLaunchNoRadioButton;
            }
        }
        
        public DocumentTemplateComboBox DocumentTemplateComboBox
        {
            get
            {
                if ((this.mDocumentTemplateComboBox == null))
                {
                    this.mDocumentTemplateComboBox = new DocumentTemplateComboBox(this);
                }
                return this.mDocumentTemplateComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUINameEdit;
        
        private SilverlightRadioButton mDocVersionHistEnabledYesRadioButton;
        
        private SilverlightRadioButton mDocVersionHistEnabledNoRadioButton;
        
        private SilverlightEdit mDescriptionEdit;
        
        private SilverlightRadioButton mDisplayOnQuickLaunchYesRadioButton;
        
        private SilverlightRadioButton mDisplayOnQuickLaunchNoRadioButton;
        
        private DocumentTemplateComboBox mDocumentTemplateComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class DocumentTemplateComboBox : SilverlightComboBox
    {
        
        public DocumentTemplateComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[SilverlightComboBox.PropertyNames.AutomationId] = "LDocTempl_ComboBox";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public SilverlightListItem DocumentTemplateListItem
        {
            get
            {
                if ((this.mDocumentTemplateListItem == null))
                {
                    this.mDocumentTemplateListItem = new SilverlightListItem(this);
                    #region Search Criteria
                    this.mDocumentTemplateListItem.SearchProperties[SilverlightListItem.PropertyNames.Instance] = "6";
                    this.mDocumentTemplateListItem.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mDocumentTemplateListItem;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightListItem mDocumentTemplateListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITopScrollViewerPane : SilverlightControl
    {
        
        public UITopScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties["AutomationId"] = "TopScrollViewer";
            this.WindowTitles.Add("Collaboration - Home");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new SilverlightButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[SilverlightButton.PropertyNames.AutomationId] = "Create";
                    this.mUICreateButton.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public SilverlightText UIErrorMessage
        {
            get
            {
                if ((this.mUIErrorMessage == null))
                {
                    this.mUIErrorMessage = new SilverlightText(this);
                    #region Search Criteria
                    this.mUIErrorMessage.SearchProperties[SilverlightText.PropertyNames.AutomationId] = "Error_Message";
                    this.mUIErrorMessage.WindowTitles.Add("Collaboration - Home");
                    #endregion
                }
                return this.mUIErrorMessage;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUICreateButton;
        
        private SilverlightText mUIErrorMessage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWindowsSecurityWindow : WinWindow
    {
        
        public UIWindowsSecurityWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Windows Security";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Windows Security");
            #endregion
        }
        
        #region Properties
        public UIUseanotheraccountListItem UIUseanotheraccountListItem
        {
            get
            {
                if ((this.mUIUseanotheraccountListItem == null))
                {
                    this.mUIUseanotheraccountListItem = new UIUseanotheraccountListItem(this);
                }
                return this.mUIUseanotheraccountListItem;
            }
        }
        
        public UIWindowsSecurityPane UIWindowsSecurityPane
        {
            get
            {
                if ((this.mUIWindowsSecurityPane == null))
                {
                    this.mUIWindowsSecurityPane = new UIWindowsSecurityPane(this);
                }
                return this.mUIWindowsSecurityPane;
            }
        }
        #endregion
        
        #region Fields
        private UIUseanotheraccountListItem mUIUseanotheraccountListItem;
        
        private UIWindowsSecurityPane mUIWindowsSecurityPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIUseanotheraccountListItem : WinListItem
    {
        
        public UIUseanotheraccountListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Use another account";
            this.WindowTitles.Add("Windows Security");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name";
                    this.mUIUsernameEdit.WindowTitles.Add("Windows Security");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("Windows Security");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        
        private WinEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIWindowsSecurityPane : WinPane
    {
        
        public UIWindowsSecurityPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Windows Security";
            this.WindowTitles.Add("Windows Security");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Windows Security");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
